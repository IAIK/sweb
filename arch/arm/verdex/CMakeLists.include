set(KERNEL_BINARY kernel.x)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11 -O0 -gstabs2 -Wall -Wextra -Wno-nonnull-compare -nostdinc -nostdlib -nostartfiles -nodefaultlibs -nostdinc++ -fno-builtin -fno-rtti -fno-exceptions -fno-stack-protector -ffreestanding -mapcs -marm -march=armv5te -Wno-strict-aliasing -fshort-wchar")
set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS}   -std=gnu11   -O0 -gstabs2 -Wall -Wextra -nostdinc -nostdlib -nostartfiles -nodefaultlibs             -fno-builtin           -fno-exceptions -fno-stack-protector -ffreestanding -mapcs -marm -march=armv5te -Wno-strict-aliasing -fshort-wchar")

MACRO(ARCH2OBJ OUTPUTOBJNAMES)
ENDMACRO(ARCH2OBJ)

set(LD_ARGUMENT -Wl,--build-id=none -Wl,-z -Wl,max-page-size=0x1000 -nostdinc -nostdlib -nodefaultlibs)
set(APPEND_LD_ARGUMENTS -Wl,-lgcc)
set(KERNEL_IMAGE_OBJCOPY )

# pflash: Create the flash image for the verdex board
add_custom_target(pflash ALL
  DEPENDS kernel
  COMMAND chmod +x ${PROJECT_SOURCE_DIR}/arch/arm/verdex/utils/makeflash.sh
  COMMAND ${PROJECT_SOURCE_DIR}/arch/arm/verdex/utils/makeflash.sh ${PROJECT_SOURCE_DIR}/arch/arm/verdex/utils/u-boot-verdex-400-r1604.bin
	COMMENT "Creating the flash image"
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
	)

# qemu: Run qemu in non debugging mode
add_custom_target(qemu
	COMMAND	qemu-system-arm -M verdex -m 8M -kernel kernel.x -serial stdio -sd SWEB-flat.vmdk -pflash flash.img -no-reboot
	COMMENT "Executing `qemu-system-arm -M verdex -m 8M -kernel kernel.x -serial stdio -sd SWEB-flat.vmdk -pflash flash.img -no-reboot`"
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
	COMMAND reset -I
	)

# qemugdb: Run qemu in debugging mode
add_custom_target(qemugdb
	COMMAND	qemu-system-arm -M verdex -s -S -m 8M -kernel kernel.x -serial stdio -sd SWEB-flat.vmdk -pflash flash.img -no-reboot
	COMMENT "Executing `qemu-system-arm -M verdex -s -S -m 8M -kernel kernel.x -serial stdio -sd SWEB-flat.vmdk -pflash flash.img -no-reboot`"
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
	COMMAND reset -I
	)

