set(KERNEL_BINARY kernel.x)

set(ARCH_ARM_ICP_KERNEL_CFLAGS -O0 -gstabs2 -Wall -Wextra -Werror -Wno-error=format -nostdinc -nostdlib -nostartfiles -nodefaultlibs -fno-builtin -fno-exceptions -fno-stack-protector -ffreestanding -Wno-strict-aliasing -fshort-wchar ${NOPICFLAG})

set(KERNEL_CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -std=gnu++17 -Wno-nonnull-compare -nostdinc++ -fno-rtti ${ARCH_ARM_ICP_KERNEL_CFLAGS})
set(KERNEL_CMAKE_C_FLAGS   ${CMAKE_C_FLAGS}   -std=gnu11 ${ARCH_ARM_ICP_KERNEL_CFLAGS})


target_compile_options(arch_options INTERFACE
    -mapcs -marm -march=armv5te -mcpu=arm926ej-s)

target_link_options(arch_options INTERFACE
    -Wl,--build-id=none -Wl,-z,max-page-size=0x1000 -nostdinc -nostdlib -nodefaultlibs)


target_link_options(kernel_options INTERFACE
    ${NOPIEFLAG})

target_link_libraries(kernel_options INTERFACE
    -Wl,--no-whole-archive -Wl,-lgcc -Wl,--whole-archive)

target_compile_options(kernel_options INTERFACE
    $<$<COMPILE_LANGUAGE:CXX>:${KERNEL_CMAKE_CXX_FLAGS}>
    $<$<COMPILE_LANGUAGE:C>:${KERNEL_CMAKE_C_FLAGS}>
    $<$<COMPILE_LANGUAGE:ASM>:${KERNEL_CMAKE_C_FLAGS}>
    )


MACRO(ARCH2OBJ ARCHOBJ_LIBNAME LIBRARY_NAME)
ENDMACRO(ARCH2OBJ)

set(AVAILABLE_MEMORY 8M)

set(QEMU_BIN qemu-system-arm)
set(QEMU_FLAGS_COMMON -M integratorcp -m ${AVAILABLE_MEMORY} -kernel kernel.x -serial stdio -sd ${HDD_IMAGE} -no-reboot)
string(REPLACE ";" " " QEMU_FLAGS_COMMON_STR "${QEMU_FLAGS_COMMON}")

# qemu: Run qemu in non debugging mode
add_custom_target(qemu
	COMMAND ${QEMU_BIN} ${QEMU_FLAGS_COMMON}
	COMMENT "Executing `${QEMU_BIN} ${QEMU_FLAGS_COMMON_STR}`"
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
	COMMAND reset -I
	)

# qemugdb: Run qemu in debugging mode
add_custom_target(qemugdb
    COMMAND ${QEMU_BIN} ${QEMU_FLAGS_COMMON} -s -S
    COMMENT "Executing `${QEMU_BIN} ${QEMU_FLAGS_COMMON_STR} -s -S`"
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
	COMMAND reset -I
	)
