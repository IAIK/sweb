set(KERNEL_BINARY kernel.x)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11 -O0 -gstabs2 -Wall -Wextra -nostdinc -nostdlib -nostartfiles -nodefaultlibs -nostdinc++ -fno-builtin -fno-rtti -fno-exceptions -fno-stack-protector -ffreestanding -mapcs -marm -march=armv5te -Wno-strict-aliasing -fshort-wchar")
set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS}   -std=gnu11   -O0 -gstabs2 -Wall -Wextra -nostdinc -nostdlib -nostartfiles -nodefaultlibs             -fno-builtin           -fno-exceptions -fno-stack-protector -ffreestanding -mapcs -marm -march=armv5te -Wno-strict-aliasing -fshort-wchar")

MACRO(ARCH2OBJ OUTPUTOBJNAMES)
ENDMACRO(ARCH2OBJ)

set(LD_ARGUMENT -Wl,--build-id=none -Wl,-z -Wl,max-page-size=0x1000 -nostdinc -nostdlib -nodefaultlibs)
set(APPEND_LD_ARGUMENTS -lgcc)
set(KERNEL_IMAGE_OBJCOPY )

#Custom target: make qemu
#Run qemu in non debugging mode
add_custom_target(qemu
	COMMAND	qemu-system-arm -M integratorcp -m 8M -kernel kernel.x -serial stdio -sd SWEB-flat.vmdk
	COMMENT "Going to qemu-system-arm -M integratorcp -m 8M -kernel kernel.x -serial stdio -sd SWEB-flat.vmdk"
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
	COMMAND reset -I
	)

#Custom target: make qemu
#Run qemu in non debugging mode
add_custom_target(qemugdb
	COMMAND	qemu-system-arm -M integratorcp -s -S -m 8M -kernel kernel.x -serial stdio -sd SWEB-flat.vmdk
	COMMENT "Going to qemu-system-arm -M integratorcp -s -S -m 8M -kernel kernel.x -serial stdio -sd SWEB-flat.vmdk"
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
	COMMAND reset -I
	)

